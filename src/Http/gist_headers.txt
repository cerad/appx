Replace
public function  getHeaders();
public function  hasHeader     ($name);
public function  getHeader     ($name);
public function  getHeaderLines($name);
With
public function  getHeader($name,$defaultValue,$lines = false);
Where
if ($name === null) return all headers - replaces getHeader()
if ($name === string)
  and header exists
    if $lines === false return comma delimited string
    if $lines === true  return array of values
  or  header does not exist
    return default value - replaces hasHeader
if ($name === array)
  return array of headers values - because we can

Replace
public function withHeader     ($name, $value);
public function withAddedHeader($name, $value);
With
public function withHeader     ($name, $value, $line = false);

if ($name === string and $value === null)
  *** remove the header, currently missing withoutHeader
if ($name === string)
  add the header or header lines based on $line flag
if ($name === array)
  add one or more headers
  *** This is what motivated the gist.  
      No reason why we should not be able to add several headers
      in one shot and avoid the cloning overhead

I think reducing the number of required methods even at the slight cost of increasing their complexity
will enhance the chances of the standard being adopted.

Summary: Implement removing a header as well as setting multiple headers on one operation.
